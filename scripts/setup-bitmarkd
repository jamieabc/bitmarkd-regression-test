#!/usr/local/bin/bash
set -e

ERROR_CODE=1
SUCCESS_CODE=0

# stop existing running bitmarkd
while pgrep bitmarkd > /dev/null
do
    printf "stopping bitmarkd...\n"
    pkill -9 bitmarkd

    # wait 5 seconds to check
    printf "checking...\n"
    sleep 5
done
printf "all bitmarkd are stopped\n"

# compile bitmarkd
GOPATH=${HOME}/gocode
package_dir="${HOME}/bitmarkd"
bin_dir="${GOPATH}/bin"

# remove existing bitmarkd
[ -d "${package_dir}" ] && rm -rf "${package_dir}"
# remove executable files if any exist
[ -f "${GOPATH}/bin/bitmarkd" ] && rm "${GOPATH}/bin/bitmarkd"
[ -f "${GOPATH}/bin/bitmark-cli" ] && rm "${GOPATH}/bin/bitmark-cli"
[ -f "${GOPATH}/bin/bitmark-info" ] && rm "${GOPATH}/bin/bitmark-info"
[ -f "${GOPATH}/bin/bitmark-dumpdb" ] && rm "${GOPATH}/bin/bitmark-dumpdb"

# download latest bitmarkd
printf "downloading bitmarkd...\n"
git clone https://github.com/bitmark-inc/bitmarkd.git "${package_dir}"
cd "${package_dir}"
GOPATH="${GOPATH}" GO111MODULE=on go get -u -v ./...
cd ~

printf "entering directory %s" "${package_dir}\n"
cd "${package_dir}"

# setup third party libraries
printf "\nsetup third party libraries\n"
# git submodule update --init

# compile
printf "compiling...\n"
GOPATH="${GOPATH}" GO111MODULE=on go build -v ./...
GOPATH="${GOPATH}" GO111MODULE=on go install -v ./...

if [ ! -f "${bin_dir}/bitmarkd" ]; then
    printf "bitmarkd build fail...\n"
    exit $ERROR_CODE
else
    printf "bitmarkd build success\n"
fi

# create config directory if not exist
config_dir="${HOME}/.config"
if [ ! -d "${config_dir}" ]; then
    mkdir -p "${config_dir}"
fi

# generate bitmarkd config
printf "generating bitmarkd environment...\n"
array=("1" "2" "3" "4" "5" "6" "7" "8")
for number in "${array[@]}"
do
    # make sure every time a clean start, backup data directory
    printf "\nBacking up bitmarkd ${number} data directory, remove log/peer data...\n"
    dir="${config_dir}/bitmarkd${number}"
    if [ -d "${dir}/data" ]; then
        # remove backup directory if exist
        [ -d "${dir}/data-backup" ] && rm -r "${dir}/data-backup"

        #mv "${dir}/data" "${dir}/data-backup"
	rm -rf "${dir}/data"
	cp -r "${HOME}/bitmarkd-data-backup" "${dir}/data"
	#cp -r "${HOME}/bitmarkd-data-backup" "${dir}/data-backup"
    fi

    # remove existing log files
    # [ -d "${dir}/log" ] && find "${dir}/log" -name "bitmarkd.log\.[0-9]*" -delete
    [ -d "${dir}/log" ] && rm -f "${dir}/log/*"

    # remove peer data
    [ -f "${dir}/peers-local.json" ] && rm "${dir}/peers-local.json"

    # remove cache data
    [ -e "${dir}/reservoir-local.cache" ] && rm "${dir}/reservoir-local.cache"
done
exit $SUCCESS_CODE
